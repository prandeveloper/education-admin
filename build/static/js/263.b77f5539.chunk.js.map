{"version":3,"sources":["views/apps/stockControl/AddStockAdjustment.js","axiosConfig.js"],"names":["AddStockAdjustment","props","changeHandler1","e","setState","status","target","value","changeHandler","name","submitHandler","preventDefault","axiosConfig","post","state","then","response","console","log","swal","history","push","catch","error","reference_no","adjustment_date","warehouse","reason","adjusted_qty","adjusted_value","a","get","warehouseL","data","reasonL","this","addTextbox","i","splice","className","col-sm-6","onClick","onSubmit","lg","md","type","onChange","map","warehouseList","key","_id","warehousename","reasonList","Ripple","color","Component","instance","axios","create","baseURL"],"mappings":"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","file":"static/js/263.b77f5539.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Col,\r\n  Form,\r\n  Row,\r\n  Input,\r\n  CustomInput,\r\n  Label,\r\n  Button,\r\n  FormGroup,\r\n} from \"reactstrap\";\r\nimport { history } from \"../../../history\";\r\nimport axiosConfig from \"../../../axiosConfig\";\r\nimport swal from \"sweetalert\";\r\n\r\nexport class AddStockAdjustment extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    {\r\n      this.state = {\r\n        // addTextbox: [{}],\r\n        reference_no:\t\"\",\r\n        adjustment_date: \"\",\r\n        warehouse:\t\"\",\r\n        reason:\t\"\",\r\n        adjusted_qty:\t\"\",\r\n        adjusted_value:\t\"\",\r\n\r\n      };\r\n    }\r\n  }\r\n  async componentDidMount() {\r\n    //Warehouse List\r\n    axiosConfig\r\n      .get(\"/getwarehouse\")\r\n      .then(response => {\r\n        console.log(response);\r\n        this.setState({ warehouseL: response.data.data });\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n      });\r\n\r\n        // Reason List\r\n      axiosConfig\r\n      .get(\"/getReason\")\r\n      .then(response =>{\r\n        console.log(response);\r\n        this.setState({reasonL: response.data.data});\r\n      })\r\n      .catch(error=>{\r\n        console.log(error);\r\n      })\r\n    }\r\n  addControls() {\r\n    this.setState({\r\n      addTextbox: [...this.state.addTextbox, {}],\r\n    });\r\n  }\r\n  delControl(i) {\r\n    this.state.addTextbox.splice(i, 1);\r\n    this.setState({});\r\n  }\r\n\r\n    changeHandler1 = e => {\r\n      this.setState({ status: e.target.value });\r\n    };\r\n    changeHandler = e => {\r\n      this.setState({ [e.target.name]: e.target.value });\r\n    };\r\n    submitHandler = e => {\r\n      e.preventDefault();\r\n\r\n      axiosConfig\r\n        .post(\"/addstockadjustment\", this.state)\r\n        .then(response => {\r\n          console.log(response);\r\n          swal(\"Success!\", \"Submitted SuccessFull!\", \"success\");\r\n          this.props.history.push(\r\n            \"/app/stockControl/stockAdjustment\"\r\n          );\r\n        })\r\n        .catch(error => {\r\n          swal(\"Error!\", \"Error Received\", \"error\");\r\n          console.log(error);\r\n        });\r\n    };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Card>\r\n          <Row className=\"m-2\">\r\n            <Col>\r\n              <h1 col-sm-6 className=\"float-left\">\r\n                Add Stock Adjustment\r\n              </h1>\r\n            </Col>\r\n            <Col>\r\n              <Button\r\n                className=\" btn btn-danger float-right\"\r\n                onClick={() =>\r\n                  history.push(\"/app/stockControl/stockTransferRequest\")}\r\n              >\r\n                Back\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n          <CardBody>\r\n            <Form className=\"m-1\" onSubmit={this.submitHandler}>\r\n              <Row className=\"mb-2\">\r\n                <Col lg=\"6\" md=\"6\">\r\n                  <Label>Referance Number</Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"reference_no\"\r\n                    value={this.state.reference_no}\r\n                    onChange={this.changeHandler}\r\n                  />\r\n                </Col>\r\n                <Col lg=\"6\" md=\"6\" className=\"mb-1\">\r\n                  <Label>Stock Adjustment Date</Label>\r\n                  <Input\r\n                    type=\"date\"\r\n                    name=\"adjustment_date\"\r\n                    value={this.state.adjustment_date}\r\n                    onChange={this.changeHandler}\r\n                  />\r\n                </Col>\r\n                <Col lg=\"6\" md=\"6\" className=\"mb-1\">\r\n                  <Label>Warehouse</Label>\r\n                  <CustomInput\r\n                    type=\"select\"\r\n                    name=\"warehouse\"\r\n                    value={this.state.warehouse}\r\n                    onChange={this.changeHandler}\r\n                  > \r\n                  {this.state.warehouseL?.map(warehouseList => (\r\n                    <option key={warehouseList._id} value={warehouseList._id}>\r\n                      {warehouseList.warehousename}\r\n                    </option>\r\n                  ))}\r\n                  </CustomInput>\r\n                </Col>\r\n                <Col lg=\"6\" md=\"6\" className=\"mb-1\">\r\n                  <Label>Reason</Label>\r\n                  <CustomInput\r\n                    type=\"select\"\r\n                    name=\"reason\"\r\n                    value={this.state.reason}\r\n                    onChange={this.changeHandler}\r\n                  >\r\n                       {this.state.reasonL?.map(reasonList => (\r\n                    <option key={reasonList._id} value={reasonList._id}>\r\n                      {reasonList.reason}\r\n                    </option>\r\n                  ))}\r\n                  </CustomInput>\r\n                </Col>\r\n                <Col lg=\"6\" md=\"6\" className=\"mb-1\">\r\n                  <Label>Adjusted qty</Label>\r\n                  <Input\r\n                    type=\"number\"\r\n                    name=\"adjusted_qty\"\r\n                    value={this.state.adjusted_qty}\r\n                    onChange={this.changeHandler}\r\n                  ></Input>\r\n                </Col>\r\n                <Col lg=\"6\" md=\"6\" className=\"mb-1\">\r\n                  <Label>Adjusted Value</Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"adjusted_value\"\r\n                    value={this.state.adjusted_value}\r\n                    onChange={this.changeHandler}\r\n                  ></Input>\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Button.Ripple\r\n                  color=\"primary\"\r\n                  type=\"submit\"\r\n                  className=\"mr-1 mb-1\"\r\n                >\r\n                  Add\r\n                </Button.Ripple>\r\n              </Row>\r\n            </Form>\r\n          </CardBody>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default AddStockAdjustment;","import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n  baseURL: \"http://13.127.52.128/v1/api/admin\",\r\n});\r\n\r\nexport default instance;\r\n"],"sourceRoot":""}