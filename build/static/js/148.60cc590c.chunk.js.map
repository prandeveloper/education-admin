{"version":3,"sources":["views/apps/affilateProgram/SecondPhase.js"],"names":["SecondPhase","state","rowData","paginationPageSize","currenPageSize","getPageSize","defaultColDef","sortable","editable","resizable","suppressMenu","columnDefs","headerName","valueGetter","field","width","filter","cellRendererFramework","params","className","onGridReady","gridApi","api","gridColumnApi","columnApi","setState","paginationGetCurrentPage","paginationGetPageSize","totalPages","paginationGetTotalPages","updateSearchQuery","val","setQuickFilter","filterSize","paginationSetPageSize","Number","a","axiosConfig","get","then","response","data","console","log","id","this","sm","col-sm-6","tag","length","size","right","onClick","placeholder","onChange","e","target","value","Ripple","color","exportDataAsCsv","Consumer","context","gridOptions","rowSelection","colResizeDefault","animateRows","floatingFilter","pagination","pivotPanelShow","enableRtl","direction","React","Component"],"mappings":"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","file":"static/js/148.60cc590c.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Input,\r\n  Row,\r\n  Col,\r\n  UncontrolledDropdown,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  DropdownToggle,\r\n  Button,\r\n} from \"reactstrap\";\r\nimport axiosConfig from \"../../../axiosConfig\";\r\nimport { ContextLayout } from \"../../../utility/context/Layout\";\r\nimport { AgGridReact } from \"ag-grid-react\";\r\nimport { Edit, Trash2, ChevronDown, Eye } from \"react-feather\";\r\nimport { history } from \"../../../history\";\r\nimport \"../../../assets/scss/plugins/tables/_agGridStyleOverride.scss\";\r\nimport \"../../../assets/scss/pages/users.scss\";\r\n\r\nclass SecondPhase extends React.Component {\r\n  state = {\r\n    rowData: [],\r\n    paginationPageSize: 20,\r\n    currenPageSize: \"\",\r\n    getPageSize: \"\",\r\n    defaultColDef: {\r\n      sortable: true,\r\n      editable: true,\r\n      resizable: true,\r\n      suppressMenu: true,\r\n    },\r\n    columnDefs: [\r\n      {\r\n        headerName: \"S.No\",\r\n        valueGetter: \"node.rowIndex + 1\",\r\n        field: \"node.rowIndex + 1\",\r\n        width: 100,\r\n        filter: true,\r\n        // checkboxSelection: true,\r\n        // headerCheckboxSelectionFilteredOnly: true,\r\n        // headerCheckboxSelection: true,\r\n      },\r\n\r\n      {\r\n        headerName: \"Name (2ed-user)\",\r\n        field: \"userId.fullname\",\r\n        filter: true,\r\n        width: 150,\r\n        cellRendererFramework: params => {\r\n          return (\r\n            <div className=\" mr-2\">\r\n              {/* <span>{params.data.userId?.fullname}</span> */}\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n\r\n      {\r\n        headerName: \"Email (2ed-user)\",\r\n        field: \"userId?.email\",\r\n        filter: true,\r\n        width: 150,\r\n        cellRendererFramework: params => {\r\n          return (\r\n            <div className=\" mr-2\">\r\n              {/* <span>{params.data.userId?.email}</span> */}\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n      {\r\n        headerName: \"Mobile No. (2ed-user)\",\r\n        field: \"userId?.mobile\",\r\n        filter: true,\r\n        width: 150,\r\n        cellRendererFramework: params => {\r\n          return (\r\n            <div className=\" mr-2\">\r\n              {/* <span>{params.data.userId?.mobile}</span> */}\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n      {\r\n        headerName: \"Ref. Code (2ed-user)\",\r\n        field: \"usd\",\r\n        filter: true,\r\n        width: 150,\r\n        cellRendererFramework: params => {\r\n          return (\r\n            <div className=\" mr-2\">{/* <span>{params.data.usd}</span> */}</div>\r\n          );\r\n        },\r\n      },\r\n      {\r\n        headerName: \"Name (Affilated to)\",\r\n        field: \"inr\",\r\n        filter: true,\r\n        width: 150,\r\n        cellRendererFramework: params => {\r\n          return (\r\n            <div className=\" mr-2\">{/* <span>{params.data.inr}</span> */}</div>\r\n          );\r\n        },\r\n      },\r\n      {\r\n        headerName: \"Email (Affilated to)\",\r\n        field: \"upi_Id\",\r\n        filter: true,\r\n        width: 150,\r\n        cellRendererFramework: params => {\r\n          return (\r\n            <div className=\" mr-2\">\r\n              {/* <span>{params.data.upi_Id}</span> */}\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n      {\r\n        headerName: \"Menbership Plan\",\r\n        field: \"crpto_id\",\r\n        filter: true,\r\n        width: 150,\r\n        cellRendererFramework: params => {\r\n          return (\r\n            <div className=\" mr-2\">\r\n              {/* <span>{params.data.crpto_id}</span> */}\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n      {\r\n        headerName: \"User Commission\",\r\n        field: \"crpto_id\",\r\n        filter: true,\r\n        width: 150,\r\n        cellRendererFramework: params => {\r\n          return (\r\n            <div className=\" mr-2\">\r\n              {/* <span>{params.data.crpto_id}</span> */}\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n      //   {\r\n      //     headerName: \"Status\",\r\n      //     field: \"status\",\r\n      //     filter: true,\r\n      //     width: 150,\r\n      //     cellRendererFramework: params => {\r\n      //       return params.value === \"Pending\" ? (\r\n      //         <div className=\"badge badge-pill badge-warning ml-2\">\r\n      //           {params.data.status}\r\n      //         </div>\r\n      //       ) : params.value === \"Confirm\" ? (\r\n      //         <div className=\"badge badge-pill badge-success ml-2\">\r\n      //           {params.data.status}\r\n      //         </div>\r\n      //       ) : null;\r\n      //     },\r\n      //   },\r\n      //   {\r\n      //     headerName: \"Actions\",\r\n      //     field: \"transactions\",\r\n      //     width: 150,\r\n      //     cellRendererFramework: params => {\r\n      //       return (\r\n      //         <div className=\"actions cursor-pointer\">\r\n      //           <Button\r\n      //             color=\"primary\"\r\n      //             bsSize=\"small\"\r\n      //             className=\"buuton\"\r\n      //             onClick={() =>\r\n      //               axiosConfig\r\n      //                 .get(`/cnfrm_withdrawal/${params.data._id}`)\r\n      //                 .then(response => {\r\n      //                   console.log(response.data);\r\n      //                 })\r\n      //                 .catch(error => {\r\n      //                   console.log(error);\r\n      //                 })\r\n      //             }\r\n      //           >\r\n      //             Conform\r\n      //           </Button>\r\n      //         </div>\r\n      //       );\r\n      //     },\r\n      //   },\r\n      //   {\r\n      //     headerName: \"Actions\",\r\n      //     field: \"transactions\",\r\n      //     width: 100,\r\n      //     cellRendererFramework: params => {\r\n      //       return (\r\n      //         <div className=\"actions cursor-pointer\">\r\n      //           {/* <Edit\r\n      //             className=\"mr-50\"\r\n      //             size=\"20px\"\r\n      //             color=\"blue\"\r\n      //             onClick={() =>\r\n      //               history.push(`/app/course/editCourse/${params.data._id}`)\r\n      //             }\r\n      //           /> */}\r\n      //           {/* <Eye\r\n      //             className=\"mr-50\"\r\n      //             size=\"20px\"\r\n      //             color=\"blue\"\r\n      //             onClick={() =>\r\n      //               history.push(`/app/course/viewCourse/${params.data._id}`)\r\n      //             }\r\n      //           /> */}\r\n      //           <Trash2\r\n      //             size=\"20px\"\r\n      //             color=\"red\"\r\n      //             onClick={() => {\r\n      //               let selectedData = this.gridApi.getSelectedRows();\r\n      //               this.runthisfunction(params.data._id);\r\n      //               this.gridApi.updateRowData({ remove: selectedData });\r\n      //             }}\r\n      //           />\r\n      //         </div>\r\n      //       );\r\n      //     },\r\n      //   },\r\n    ],\r\n  };\r\n\r\n  async componentDidMount() {\r\n    await axiosConfig.get(\"/withdrawal_list\").then(response => {\r\n      let rowData = response.data.data;\r\n      console.log(rowData);\r\n      this.setState({ rowData });\r\n    });\r\n  }\r\n\r\n  async runthisfunction(id) {\r\n    console.log(id);\r\n    await axiosConfig.get(`/dltwithdrwal/${id}`).then(response => {\r\n      console.log(response);\r\n    });\r\n  }\r\n  onGridReady = params => {\r\n    this.gridApi = params.api;\r\n    this.gridColumnApi = params.columnApi;\r\n    this.setState({\r\n      currenPageSize: this.gridApi.paginationGetCurrentPage() + 1,\r\n      getPageSize: this.gridApi.paginationGetPageSize(),\r\n      totalPages: this.gridApi.paginationGetTotalPages(),\r\n    });\r\n  };\r\n\r\n  updateSearchQuery = val => {\r\n    this.gridApi.setQuickFilter(val);\r\n  };\r\n\r\n  filterSize = val => {\r\n    if (this.gridApi) {\r\n      this.gridApi.paginationSetPageSize(Number(val));\r\n      this.setState({\r\n        currenPageSize: val,\r\n        getPageSize: val,\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { rowData, columnDefs, defaultColDef } = this.state;\r\n    return (\r\n      <Row className=\"app-user-list\">\r\n        <Col sm=\"12\"></Col>\r\n        <Col sm=\"12\">\r\n          <Card>\r\n            <Row className=\"m-2\">\r\n              <Col>\r\n                <h1 col-sm-6 className=\"float-left\">\r\n                  Second Phase List\r\n                </h1>\r\n              </Col>\r\n            </Row>\r\n            <CardBody>\r\n              {this.state.rowData === null ? null : (\r\n                <div className=\"ag-theme-material w-100 my-2 ag-grid-table\">\r\n                  <div className=\"d-flex flex-wrap justify-content-between align-items-center\">\r\n                    <div className=\"mb-1\">\r\n                      <UncontrolledDropdown className=\"p-1 ag-dropdown\">\r\n                        <DropdownToggle tag=\"div\">\r\n                          {this.gridApi\r\n                            ? this.state.currenPageSize\r\n                            : \"\" * this.state.getPageSize -\r\n                              (this.state.getPageSize - 1)}{\" \"}\r\n                          -{\" \"}\r\n                          {this.state.rowData.length -\r\n                            this.state.currenPageSize * this.state.getPageSize >\r\n                          0\r\n                            ? this.state.currenPageSize * this.state.getPageSize\r\n                            : this.state.rowData.length}{\" \"}\r\n                          of {this.state.rowData.length}\r\n                          <ChevronDown className=\"ml-50\" size={15} />\r\n                        </DropdownToggle>\r\n                        <DropdownMenu right>\r\n                          <DropdownItem\r\n                            tag=\"div\"\r\n                            onClick={() => this.filterSize(20)}\r\n                          >\r\n                            20\r\n                          </DropdownItem>\r\n                          <DropdownItem\r\n                            tag=\"div\"\r\n                            onClick={() => this.filterSize(50)}\r\n                          >\r\n                            50\r\n                          </DropdownItem>\r\n                          <DropdownItem\r\n                            tag=\"div\"\r\n                            onClick={() => this.filterSize(100)}\r\n                          >\r\n                            100\r\n                          </DropdownItem>\r\n                          <DropdownItem\r\n                            tag=\"div\"\r\n                            onClick={() => this.filterSize(134)}\r\n                          >\r\n                            134\r\n                          </DropdownItem>\r\n                        </DropdownMenu>\r\n                      </UncontrolledDropdown>\r\n                    </div>\r\n                    <div className=\"d-flex flex-wrap justify-content-between mb-1\">\r\n                      <div className=\"table-input mr-1\">\r\n                        <Input\r\n                          placeholder=\"search...\"\r\n                          onChange={e => this.updateSearchQuery(e.target.value)}\r\n                          value={this.state.value}\r\n                        />\r\n                      </div>\r\n                      <div className=\"export-btn\">\r\n                        <Button.Ripple\r\n                          color=\"primary\"\r\n                          onClick={() => this.gridApi.exportDataAsCsv()}\r\n                        >\r\n                          Export as CSV\r\n                        </Button.Ripple>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <ContextLayout.Consumer>\r\n                    {context => (\r\n                      <AgGridReact\r\n                        gridOptions={{}}\r\n                        rowSelection=\"multiple\"\r\n                        defaultColDef={defaultColDef}\r\n                        columnDefs={columnDefs}\r\n                        rowData={rowData}\r\n                        onGridReady={this.onGridReady}\r\n                        colResizeDefault={\"shift\"}\r\n                        animateRows={true}\r\n                        floatingFilter={false}\r\n                        pagination={true}\r\n                        paginationPageSize={this.state.paginationPageSize}\r\n                        pivotPanelShow=\"always\"\r\n                        enableRtl={context.state.direction === \"rtl\"}\r\n                      />\r\n                    )}\r\n                  </ContextLayout.Consumer>\r\n                </div>\r\n              )}\r\n            </CardBody>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    );\r\n  }\r\n}\r\nexport default SecondPhase;\r\n"],"sourceRoot":""}