{"version":3,"sources":["views/apps/course/EditCourse.js"],"names":["EditCourse","props","onEditorStateChange","editorState","setState","long_desc","draftToHtml","convertToRaw","getCurrentContent","console","log","state","onChangeHandler","event","selectedFile","target","files","selectedName","name","changeHandler","e","value","submitHandler","preventDefault","data","FormData","append","course_title","desc","teacher","category_id","keys","key","values","id","ma","params","axiosConfig","post","then","response","swal","catch","error","getPlainText","course_type","course_image","EditorState","createEmpty","teacherL","categ","a","get","this","match","className","col-sm-6","onClick","history","push","onSubmit","lg","md","type","placeholder","onChange","map","tech","_id","fullname","cat","catName","required","toolbarClassName","wrapperClassName","editorClassName","toolbar","options","inline","bold","italic","underline","strikethrough","code","blockType","fontSize","fontFamily","Ripple","color","Component"],"mappings":"6dAsBaA,EAAb,kDACE,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAyDRC,oBAAsB,SAACC,GACrB,EAAKC,SAAS,CACZD,cACAE,UAAWC,IAAYC,uBAAaJ,EAAYK,wBAGlDC,QAAQC,IAAI,EAAKC,MAAMN,YAhEN,EAmEnBO,gBAAkB,SAACC,GACjB,EAAKT,SAAS,CAAEU,aAAcD,EAAME,OAAOC,MAAM,KACjD,EAAKZ,SAAS,CAAEa,aAAcJ,EAAME,OAAOC,MAAM,GAAGE,OACpDT,QAAQC,IAAIG,EAAME,OAAOC,MAAM,KAtEd,EAyEnBG,cAAgB,SAACC,GACf,EAAKhB,SAAL,eAAiBgB,EAAEL,OAAOG,KAAOE,EAAEL,OAAOM,SA1EzB,EA6EnBC,cAAgB,SAACF,GACfA,EAAEG,iBACF,IAAMC,EAAO,IAAIC,SACjBD,EAAKE,OAAO,eAAgB,EAAKf,MAAMgB,cACvCH,EAAKE,OAAO,OAAQ,EAAKf,MAAMiB,MAC/BJ,EAAKE,OAAO,YAAa,EAAKf,MAAMN,WACpCmB,EAAKE,OAAO,UAAW,EAAKf,MAAMkB,SAClCL,EAAKE,OAAO,cAAe,EAAKf,MAAMmB,aACN,OAA5B,EAAKnB,MAAMG,cACbU,EAAKE,OACH,eACA,EAAKf,MAAMG,aACX,EAAKH,MAAMM,cAZM,oBAeLO,EAAKO,QAfA,IAerB,2BAA6B,CAAC,IAArBC,EAAoB,QAC3BvB,QAAQC,IAAIsB,IAhBO,kDAkBHR,EAAKS,UAlBF,IAkBrB,2BAAiC,CAAC,IAAzBZ,EAAwB,QAC/BZ,QAAQC,IAAIW,IAnBO,8BAqBrB,IAAMa,EAAO,EAAKjC,MAAMkC,GAAGC,OAArBF,GACNG,IACGC,KADH,wBACyBJ,GAAMV,GAC5Be,MAAK,SAACC,GACL/B,QAAQC,IAAI8B,GACZC,IAAK,WAAY,yBAA0B,cAE5CC,OAAM,SAACC,GACNlC,QAAQC,IAAIiC,EAAMH,UAClBC,IAAK,SAAU,iBAAkB,YAErC,EAAK9B,MAAMR,YAAYK,oBAAoBoC,gBA3G3C,EAAKjC,MAAQ,CACXgB,aAAc,GACdC,KAAM,GACNvB,UAAW,GACXwB,QAAS,GACTgB,YAAa,GACbf,YAAa,GACbgB,aAAc,GACd3C,YAAa4C,cAAYC,cACzBlC,aAAc,KACdG,aAAc,GACdgC,SAAU,GACVC,MAAO,IAdQ,EADrB,4FAkBE,mCAAAC,EAAA,sDAEEd,IACGe,IAAI,mBACJb,MAAK,SAACC,GACL/B,QAAQC,IAAI8B,GACZ,EAAKpC,SAAS,CAAE6C,SAAUT,EAAShB,KAAKA,UAEzCkB,OAAM,SAACC,GACNlC,QAAQC,IAAIiC,MAGhBN,IACGe,IAAI,WACJb,MAAK,SAACC,GACL/B,QAAQC,IAAI8B,GACZ,EAAKpC,SAAS,CAAE8C,MAAOV,EAAShB,KAAKA,UAEtCkB,OAAM,SAACC,GACNlC,QAAQC,IAAIiC,MAGVT,EAAOmB,KAAKpD,MAAMqD,MAAMlB,OAAxBF,GACNG,IACGe,IADH,0BAC0BlB,IACvBK,MAAK,SAACC,GACL/B,QAAQC,IAAI8B,EAAShB,KAAKA,MAC1B,EAAKpB,SAAS,CACZuB,aAAca,EAAShB,KAAKA,KAAKG,aACjCC,KAAMY,EAAShB,KAAKA,KAAKI,KACzBvB,UAAWmC,EAAShB,KAAKA,KAAKnB,UAC9BwC,YAAaL,EAAShB,KAAKA,KAAKqB,YAChCC,aAAcN,EAAShB,KAAKA,KAAKsB,kBAGpCJ,OAAM,SAACC,GACNlC,QAAQC,IAAIiC,MApClB,gDAlBF,0EAgHE,WAAU,IAAD,EACP,OACE,6BACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKY,UAAU,OACb,kBAAC,IAAD,KACE,wBAAIC,YAAA,EAASD,UAAU,cAAvB,gBAIF,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEA,UAAU,8BACVE,QAAS,kBAAMC,IAAQC,KAAK,4BAF9B,UAQJ,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAMJ,UAAU,MAAMK,SAAUP,KAAK/B,eACnC,kBAAC,IAAD,CAAKiC,UAAU,QACb,kBAAC,IAAD,CAAKM,GAAG,IAAIC,GAAG,KACb,kBAAC,IAAD,KACE,kBAAC,IAAD,qBACA,kBAAC,IAAD,CACEC,KAAK,OACLC,YAAY,cACZ9C,KAAK,eACLG,MAAOgC,KAAK1C,MAAMgB,aAClBsC,SAAUZ,KAAKlC,kBAIrB,kBAAC,IAAD,CAAK0C,GAAG,IAAIC,GAAG,KACb,kBAAC,IAAD,KACE,kBAAC,IAAD,qBACA,kBAAC,IAAD,CACEC,KAAK,SACLC,YAAY,UACZ9C,KAAK,UACLG,MAAOgC,KAAK1C,MAAMkB,QAClBoC,SAAUZ,KAAKlC,eAEf,sDAPF,UAQGkC,KAAK1C,MAAMsC,gBARd,aAQG,EAAqBiB,KAAI,SAACC,GAAD,OACxB,4BAAQnC,IAAKmC,EAAKC,IAAK/C,MAAO8C,EAAKC,KAChCD,EAAKE,gBAMhB,kBAAC,IAAD,CAAKR,GAAG,IAAIC,GAAG,KACb,kBAAC,IAAD,KACE,kBAAC,IAAD,oBACA,kBAAC,IAAD,CACEC,KAAK,SACL7C,KAAK,cACLG,MAAOgC,KAAK1C,MAAMkC,YAClBoB,SAAUZ,KAAKlC,eAEf,yDACA,wCACA,2CAIN,kBAAC,IAAD,CAAK0C,GAAG,IAAIC,GAAG,KACb,kBAAC,IAAD,KACE,kBAAC,IAAD,iBACA,kBAAC,IAAD,CACEC,KAAK,SACLC,YAAY,WACZ9C,KAAK,cACLG,MAAOgC,KAAK1C,MAAMmB,YAClBmC,SAAUZ,KAAKlC,eAEf,sDACCkC,KAAK1C,MAAMuC,MAAMgB,KAAI,SAACI,GAAD,OACpB,4BAAQtC,IAAKsC,EAAIF,IAAK/C,MAAOiD,EAAIF,KAC9BE,EAAIC,eAMf,kBAAC,IAAD,CAAKV,GAAG,IAAIC,GAAG,KACb,kBAAC,IAAD,KACE,kBAAC,IAAD,oBACA,kBAAC,IAAD,CACEC,KAAK,WACLC,YAAY,cACZ9C,KAAK,OACLG,MAAOgC,KAAK1C,MAAMiB,KAClBqC,SAAUZ,KAAKlC,kBAIrB,kBAAC,IAAD,CAAK0C,GAAG,IAAIC,GAAG,KACb,kBAAC,IAAD,KACE,kBAAC,IAAD,yBACA,kBAAC,SAAD,CACEU,UAAQ,EACRC,iBAAiB,wBACjBC,iBAAiB,eACjBC,gBAAgB,cAChBxE,YAAakD,KAAK1C,MAAMR,YACxBD,oBAAqBmD,KAAKnD,oBAC1B0E,QAAS,CACPC,QAAS,CACP,SACA,YACA,WACA,cAEFC,OAAQ,CACND,QAAS,CACP,OACA,SACA,YACA,gBACA,aAEFE,KAAM,CAAExB,UAAW,6BACnByB,OAAQ,CAAEzB,UAAW,6BACrB0B,UAAW,CAAE1B,UAAW,6BACxB2B,cAAe,CACb3B,UAAW,6BAEb4B,KAAM,CAAE5B,UAAW,8BAErB6B,UAAW,CACT7B,UAAW,6BAEb8B,SAAU,CACR9B,UAAW,6BAEb+B,WAAY,CACV/B,UAAW,kCAMrB,kBAAC,IAAD,CAAKM,GAAG,IAAIC,GAAG,KACb,kBAAC,IAAD,KACE,kBAAC,IAAD,qBACA,kBAAC,IAAD,CAAaC,KAAK,OAAOE,SAAUZ,KAAKzC,qBAI9C,kBAAC,IAAD,KACE,kBAAC,IAAO2E,OAAR,CACEC,MAAM,UACNzB,KAAK,SACLR,UAAU,aAHZ,mBAzQhB,GAAgCkC,aAyRjBzF,a","file":"static/js/164.5dcd6dc3.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Col,\r\n  Form,\r\n  Row,\r\n  Input,\r\n  Label,\r\n  Button,\r\n  CustomInput,\r\n  FormGroup,\r\n} from \"reactstrap\";\r\nimport { EditorState, convertToRaw } from \"draft-js\";\r\nimport { Editor } from \"react-draft-wysiwyg\";\r\nimport draftToHtml from \"draftjs-to-html\";\r\nimport \"react-draft-wysiwyg/dist/react-draft-wysiwyg.css\";\r\nimport \"../../../assets/scss/plugins/extensions/editor.scss\";\r\nimport { history } from \"../../../history\";\r\nimport axiosConfig from \"../../../axiosConfig\";\r\nimport swal from \"sweetalert\";\r\n\r\nexport class EditCourse extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      course_title: \"\",\r\n      desc: \"\",\r\n      long_desc: \"\",\r\n      teacher: \"\",\r\n      course_type: \"\",\r\n      category_id: \"\",\r\n      course_image: \"\",\r\n      editorState: EditorState.createEmpty(),\r\n      selectedFile: null,\r\n      selectedName: \"\",\r\n      teacherL: [],\r\n      categ: [],\r\n    };\r\n  }\r\n  async componentDidMount() {\r\n    //teacherList\r\n    axiosConfig\r\n      .get(\"/approved_staff\")\r\n      .then((response) => {\r\n        console.log(response);\r\n        this.setState({ teacherL: response.data.data });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n    //Category\r\n    axiosConfig\r\n      .get(\"/allCat\")\r\n      .then((response) => {\r\n        console.log(response);\r\n        this.setState({ categ: response.data.data });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n    //ViewOneCourse\r\n    let { id } = this.props.match.params;\r\n    axiosConfig\r\n      .get(`/viewonecoursep/${id}`)\r\n      .then((response) => {\r\n        console.log(response.data.data);\r\n        this.setState({\r\n          course_title: response.data.data.course_title,\r\n          desc: response.data.data.desc,\r\n          long_desc: response.data.data.long_desc,\r\n          course_type: response.data.data.course_type,\r\n          course_image: response.data.data.course_image,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }\r\n  // Text Editor\r\n\r\n  onEditorStateChange = (editorState) => {\r\n    this.setState({\r\n      editorState,\r\n      long_desc: draftToHtml(convertToRaw(editorState.getCurrentContent())),\r\n    });\r\n    //console.log(this.state.editorState);\r\n    console.log(this.state.long_desc);\r\n  };\r\n\r\n  onChangeHandler = (event) => {\r\n    this.setState({ selectedFile: event.target.files[0] });\r\n    this.setState({ selectedName: event.target.files[0].name });\r\n    console.log(event.target.files[0]);\r\n  };\r\n\r\n  changeHandler = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  submitHandler = (e) => {\r\n    e.preventDefault();\r\n    const data = new FormData();\r\n    data.append(\"course_title\", this.state.course_title);\r\n    data.append(\"desc\", this.state.desc);\r\n    data.append(\"long_desc\", this.state.long_desc);\r\n    data.append(\"teacher\", this.state.teacher);\r\n    data.append(\"category_id\", this.state.category_id);\r\n    if (this.state.selectedFile !== null) {\r\n      data.append(\r\n        \"course_image\",\r\n        this.state.selectedFile,\r\n        this.state.selectedName\r\n      );\r\n    }\r\n    for (var key of data.keys()) {\r\n      console.log(key);\r\n    }\r\n    for (var value of data.values()) {\r\n      console.log(value);\r\n    }\r\n    let { id } = this.props.ma.params;\r\n    axiosConfig\r\n      .post(`/updatecourse/${id}`, data)\r\n      .then((response) => {\r\n        console.log(response);\r\n        swal(\"Success!\", \"Submitted SuccessFull!\", \"success\");\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response);\r\n        swal(\"Error!\", \"Error Received\", \"error\");\r\n      });\r\n    this.state.editorState.getCurrentContent().getPlainText();\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Card>\r\n          <Row className=\"m-2\">\r\n            <Col>\r\n              <h1 col-sm-6 className=\"float-left\">\r\n                Edit Course\r\n              </h1>\r\n            </Col>\r\n            <Col>\r\n              <Button\r\n                className=\" btn btn-danger float-right\"\r\n                onClick={() => history.push(\"/app/course/courseList\")}\r\n              >\r\n                Back\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n          <CardBody>\r\n            <Form className=\"m-1\" onSubmit={this.submitHandler}>\r\n              <Row className=\"mb-2\">\r\n                <Col lg=\"6\" md=\"6\">\r\n                  <FormGroup>\r\n                    <Label>Course Title</Label>\r\n                    <Input\r\n                      type=\"text\"\r\n                      placeholder=\"Course Name\"\r\n                      name=\"course_title\"\r\n                      value={this.state.course_title}\r\n                      onChange={this.changeHandler}\r\n                    />\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col lg=\"6\" md=\"6\">\r\n                  <FormGroup>\r\n                    <Label>Teacher Name</Label>\r\n                    <CustomInput\r\n                      type=\"select\"\r\n                      placeholder=\"Teacher\"\r\n                      name=\"teacher\"\r\n                      value={this.state.teacher}\r\n                      onChange={this.changeHandler}\r\n                    >\r\n                      <option>Select Teacher....</option>\r\n                      {this.state.teacherL?.map((tech) => (\r\n                        <option key={tech._id} value={tech._id}>\r\n                          {tech.fullname}\r\n                        </option>\r\n                      ))}\r\n                    </CustomInput>\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col lg=\"6\" md=\"6\">\r\n                  <FormGroup>\r\n                    <Label>Course Type</Label>\r\n                    <CustomInput\r\n                      type=\"select\"\r\n                      name=\"course_type\"\r\n                      value={this.state.course_type}\r\n                      onChange={this.changeHandler}\r\n                    >\r\n                      <option>Select Course Type...</option>\r\n                      <option>PAID</option>\r\n                      <option>FREE</option>\r\n                    </CustomInput>\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col lg=\"6\" md=\"6\">\r\n                  <FormGroup>\r\n                    <Label>Category</Label>\r\n                    <CustomInput\r\n                      type=\"select\"\r\n                      placeholder=\"Category\"\r\n                      name=\"category_id\"\r\n                      value={this.state.category_id}\r\n                      onChange={this.changeHandler}\r\n                    >\r\n                      <option>Select Category...</option>\r\n                      {this.state.categ.map((cat) => (\r\n                        <option key={cat._id} value={cat._id}>\r\n                          {cat.catName}\r\n                        </option>\r\n                      ))}\r\n                    </CustomInput>\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col lg=\"6\" md=\"6\">\r\n                  <FormGroup>\r\n                    <Label>Description</Label>\r\n                    <Input\r\n                      type=\"textarea\"\r\n                      placeholder=\"Description\"\r\n                      name=\"desc\"\r\n                      value={this.state.desc}\r\n                      onChange={this.changeHandler}\r\n                    />\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col lg=\"6\" md=\"6\">\r\n                  <FormGroup>\r\n                    <Label>Long Description</Label>\r\n                    <Editor\r\n                      required\r\n                      toolbarClassName=\"demo-toolbar-absolute\"\r\n                      wrapperClassName=\"demo-wrapper\"\r\n                      editorClassName=\"demo-editor\"\r\n                      editorState={this.state.editorState}\r\n                      onEditorStateChange={this.onEditorStateChange}\r\n                      toolbar={{\r\n                        options: [\r\n                          \"inline\",\r\n                          \"blockType\",\r\n                          \"fontSize\",\r\n                          \"fontFamily\",\r\n                        ],\r\n                        inline: {\r\n                          options: [\r\n                            \"bold\",\r\n                            \"italic\",\r\n                            \"underline\",\r\n                            \"strikethrough\",\r\n                            \"monospace\",\r\n                          ],\r\n                          bold: { className: \"bordered-option-classname\" },\r\n                          italic: { className: \"bordered-option-classname\" },\r\n                          underline: { className: \"bordered-option-classname\" },\r\n                          strikethrough: {\r\n                            className: \"bordered-option-classname\",\r\n                          },\r\n                          code: { className: \"bordered-option-classname\" },\r\n                        },\r\n                        blockType: {\r\n                          className: \"bordered-option-classname\",\r\n                        },\r\n                        fontSize: {\r\n                          className: \"bordered-option-classname\",\r\n                        },\r\n                        fontFamily: {\r\n                          className: \"bordered-option-classname\",\r\n                        },\r\n                      }}\r\n                    />\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col lg=\"6\" md=\"6\">\r\n                  <FormGroup>\r\n                    <Label>Course Image</Label>\r\n                    <CustomInput type=\"file\" onChange={this.onChangeHandler} />\r\n                  </FormGroup>\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Button.Ripple\r\n                  color=\"primary\"\r\n                  type=\"submit\"\r\n                  className=\"ml-2 mb-1\"\r\n                >\r\n                  Update\r\n                </Button.Ripple>\r\n              </Row>\r\n            </Form>\r\n          </CardBody>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EditCourse;\r\n"],"sourceRoot":""}