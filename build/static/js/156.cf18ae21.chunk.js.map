{"version":3,"sources":["views/apps/notifications/Notification.js","axiosConfig.js"],"names":["Notification","state","rowData","paginationPageSize","currenPageSize","getPageSize","defaultColDef","sortable","editable","resizable","suppressMenu","columnDefs","headerName","valueGetter","field","width","filter","cellRendererFramework","params","className","data","noti_title","usertype","staffid","email","userid","desc","size","color","onClick","history","push","_id","selectedData","gridApi","getSelectedRows","runthisfunction","updateRowData","remove","onGridReady","api","gridColumnApi","columnApi","setState","paginationGetCurrentPage","paginationGetPageSize","totalPages","paginationGetTotalPages","updateSearchQuery","val","setQuickFilter","filterSize","paginationSetPageSize","Number","a","axiosConfig","get","then","response","console","log","this","sm","col-sm-6","tag","length","right","placeholder","onChange","e","target","value","Ripple","exportDataAsCsv","Consumer","context","gridOptions","rowSelection","colResizeDefault","animateRows","floatingFilter","pagination","pivotPanelShow","enableRtl","direction","React","Component","instance","axios","create","baseURL"],"mappings":"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","file":"static/js/156.cf18ae21.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Input,\r\n  Row,\r\n  Col,\r\n  UncontrolledDropdown,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  DropdownToggle,\r\n  Button,\r\n} from \"reactstrap\";\r\nimport axiosConfig from \"../../../axiosConfig\";\r\nimport { ContextLayout } from \"../../../utility/context/Layout\";\r\nimport { AgGridReact } from \"ag-grid-react\";\r\nimport { Edit, Trash2, ChevronDown } from \"react-feather\";\r\nimport { history } from \"../../../history\";\r\nimport \"../../../assets/scss/plugins/tables/_agGridStyleOverride.scss\";\r\nimport \"../../../assets/scss/pages/users.scss\";\r\n\r\nclass Notification extends React.Component {\r\n  state = {\r\n    rowData: [],\r\n    paginationPageSize: 20,\r\n    currenPageSize: \"\",\r\n    getPageSize: \"\",\r\n    defaultColDef: {\r\n      sortable: true,\r\n      editable: true,\r\n      resizable: true,\r\n      suppressMenu: true,\r\n    },\r\n    columnDefs: [\r\n      {\r\n        headerName: \"S.No\",\r\n        valueGetter: \"node.rowIndex + 1\",\r\n        field: \"node.rowIndex + 1\",\r\n        width: 100,\r\n        filter: true,\r\n        // checkboxSelection: true,\r\n        // headerCheckboxSelectionFilteredOnly: true,\r\n        // headerCheckboxSelection: true,\r\n      },\r\n\r\n      //   {\r\n      //     headerName: \"Image\",\r\n      //     field: \"image\",\r\n      //     filter: false,\r\n      //     width: 120,\r\n      //     cellRendererFramework: params => {\r\n      //       return (\r\n      //         <div className=\"d-flex align-items-center cursor-pointer\">\r\n      //           <img\r\n      //             className=\"rounded-circle  mr-4\"\r\n      //             src={params.data.image}\r\n      //             alt=\" brand\"\r\n      //             height=\"40\"\r\n      //             width=\"40\"\r\n      //           />\r\n      //         </div>\r\n      //       );\r\n      //     },\r\n      //   },\r\n\r\n      {\r\n        headerName: \"Title\",\r\n        field: \"noti_title\",\r\n        filter: true,\r\n        width: 150,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"ml-2 mr-4\">\r\n              <span>{params.data.noti_title}</span>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n\r\n      {\r\n        headerName: \"User Type\",\r\n        field: \"usertype\",\r\n        filter: true,\r\n        width: 150,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"ml-2 mr-4\">\r\n              <span>{params.data.usertype}</span>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n\r\n      {\r\n        headerName: \"User Type\",\r\n        field: \"usertype\",\r\n        filter: true,\r\n        width: 150,\r\n        cellRendererFramework: (params) => {\r\n          if (params.data.staffid?.email !== null) {\r\n            return (\r\n              <div className=\"ml-2 mr-4\">\r\n                <span>{params.data.staffid?.email}</span>\r\n              </div>\r\n            );\r\n          } else if (params.data.userid?.email !== null) {\r\n            return (\r\n              <div className=\"ml-2 mr-4\">\r\n                <span>{params.data.userid?.email}</span>\r\n              </div>\r\n            );\r\n          }\r\n        },\r\n      },\r\n      {\r\n        headerName: \"Description\",\r\n        field: \"desc\",\r\n        filter: true,\r\n        width: 250,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"ml-2 mr-4\">\r\n              <span>{params.data.desc}</span>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n\r\n      {\r\n        headerName: \"Actions\",\r\n        field: \"transactions\",\r\n        width: 150,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"actions cursor-pointer\">\r\n              <Edit\r\n                className=\"mr-50\"\r\n                size=\"20px\"\r\n                color=\"blue\"\r\n                onClick={() =>\r\n                  history.push(\r\n                    `/app/contactUs/customer/editCustomer/${params.data._id}`\r\n                  )\r\n                }\r\n              />\r\n              <Trash2\r\n                size=\"20px\"\r\n                color=\"red\"\r\n                onClick={() => {\r\n                  let selectedData = this.gridApi.getSelectedRows();\r\n                  this.runthisfunction(params.data._id);\r\n                  this.gridApi.updateRowData({ remove: selectedData });\r\n                }}\r\n              />\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n    ],\r\n  };\r\n\r\n  async componentDidMount() {\r\n    await axiosConfig.get(\"/allNotification\").then((response) => {\r\n      let rowData = response.data.data;\r\n      console.log(rowData);\r\n      this.setState({ rowData });\r\n    });\r\n  }\r\n\r\n  //   async runthisfunction(id) {\r\n  //     console.log(id);\r\n  //     await axiosConfig\r\n  //       .get(`http://35.154.86.59/api/user/delcustomer/${id}`)\r\n  //       .then((response) => {\r\n  //         console.log(response);\r\n  //       });\r\n  //   }\r\n  onGridReady = (params) => {\r\n    this.gridApi = params.api;\r\n    this.gridColumnApi = params.columnApi;\r\n    this.setState({\r\n      currenPageSize: this.gridApi.paginationGetCurrentPage() + 1,\r\n      getPageSize: this.gridApi.paginationGetPageSize(),\r\n      totalPages: this.gridApi.paginationGetTotalPages(),\r\n    });\r\n  };\r\n\r\n  updateSearchQuery = (val) => {\r\n    this.gridApi.setQuickFilter(val);\r\n  };\r\n\r\n  filterSize = (val) => {\r\n    if (this.gridApi) {\r\n      this.gridApi.paginationSetPageSize(Number(val));\r\n      this.setState({\r\n        currenPageSize: val,\r\n        getPageSize: val,\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { rowData, columnDefs, defaultColDef } = this.state;\r\n    return (\r\n      <Row className=\"app-user-list\">\r\n        <Col sm=\"12\"></Col>\r\n        <Col sm=\"12\">\r\n          <Card>\r\n            <Row className=\"m-2\">\r\n              <Col>\r\n                <h1 col-sm-6 className=\"float-left\">\r\n                  Notification\r\n                </h1>\r\n              </Col>\r\n              <Col>\r\n                <Button\r\n                  className=\" btn btn-danger float-right\"\r\n                  onClick={() =>\r\n                    history.push(\"/app/notification/addNotification\")\r\n                  }\r\n                >\r\n                  Add New\r\n                </Button>\r\n              </Col>\r\n            </Row>\r\n            <CardBody>\r\n              {this.state.rowData === null ? null : (\r\n                <div className=\"ag-theme-material w-100 my-2 ag-grid-table\">\r\n                  <div className=\"d-flex flex-wrap justify-content-between align-items-center\">\r\n                    <div className=\"mb-1\">\r\n                      <UncontrolledDropdown className=\"p-1 ag-dropdown\">\r\n                        <DropdownToggle tag=\"div\">\r\n                          {this.gridApi\r\n                            ? this.state.currenPageSize\r\n                            : \"\" * this.state.getPageSize -\r\n                              (this.state.getPageSize - 1)}{\" \"}\r\n                          -{\" \"}\r\n                          {this.state.rowData.length -\r\n                            this.state.currenPageSize * this.state.getPageSize >\r\n                          0\r\n                            ? this.state.currenPageSize * this.state.getPageSize\r\n                            : this.state.rowData.length}{\" \"}\r\n                          of {this.state.rowData.length}\r\n                          <ChevronDown className=\"ml-50\" size={15} />\r\n                        </DropdownToggle>\r\n                        <DropdownMenu right>\r\n                          <DropdownItem\r\n                            tag=\"div\"\r\n                            onClick={() => this.filterSize(20)}\r\n                          >\r\n                            20\r\n                          </DropdownItem>\r\n                          <DropdownItem\r\n                            tag=\"div\"\r\n                            onClick={() => this.filterSize(50)}\r\n                          >\r\n                            50\r\n                          </DropdownItem>\r\n                          <DropdownItem\r\n                            tag=\"div\"\r\n                            onClick={() => this.filterSize(100)}\r\n                          >\r\n                            100\r\n                          </DropdownItem>\r\n                          <DropdownItem\r\n                            tag=\"div\"\r\n                            onClick={() => this.filterSize(134)}\r\n                          >\r\n                            134\r\n                          </DropdownItem>\r\n                        </DropdownMenu>\r\n                      </UncontrolledDropdown>\r\n                    </div>\r\n                    <div className=\"d-flex flex-wrap justify-content-between mb-1\">\r\n                      <div className=\"table-input mr-1\">\r\n                        <Input\r\n                          placeholder=\"search...\"\r\n                          onChange={(e) =>\r\n                            this.updateSearchQuery(e.target.value)\r\n                          }\r\n                          value={this.state.value}\r\n                        />\r\n                      </div>\r\n                      <div className=\"export-btn\">\r\n                        <Button.Ripple\r\n                          color=\"primary\"\r\n                          onClick={() => this.gridApi.exportDataAsCsv()}\r\n                        >\r\n                          Export as CSV\r\n                        </Button.Ripple>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <ContextLayout.Consumer>\r\n                    {(context) => (\r\n                      <AgGridReact\r\n                        gridOptions={{}}\r\n                        rowSelection=\"multiple\"\r\n                        defaultColDef={defaultColDef}\r\n                        columnDefs={columnDefs}\r\n                        rowData={rowData}\r\n                        onGridReady={this.onGridReady}\r\n                        colResizeDefault={\"shift\"}\r\n                        animateRows={true}\r\n                        floatingFilter={false}\r\n                        pagination={true}\r\n                        paginationPageSize={this.state.paginationPageSize}\r\n                        pivotPanelShow=\"always\"\r\n                        enableRtl={context.state.direction === \"rtl\"}\r\n                      />\r\n                    )}\r\n                  </ContextLayout.Consumer>\r\n                </div>\r\n              )}\r\n            </CardBody>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    );\r\n  }\r\n}\r\nexport default Notification;\r\n","import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n  baseURL: \"http://13.127.52.128/api/api/admin\",\r\n});\r\n\r\nexport default instance;\r\n"],"sourceRoot":""}