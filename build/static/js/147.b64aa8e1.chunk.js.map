{"version":3,"sources":["views/apps/affilateProgram/AffilateProgramList.js"],"names":["AffilateProgramList","state","rowData","paginationPageSize","currenPageSize","getPageSize","defaultColDef","sortable","editable","resizable","suppressMenu","columnDefs","headerName","valueGetter","field","width","filter","cellRendererFramework","params","className","data","refer_from_id","fullname","email","mobile","refer_to_id","refer_amount","moment","createdAt","format","onGridReady","gridApi","api","gridColumnApi","columnApi","setState","paginationGetCurrentPage","paginationGetPageSize","totalPages","paginationGetTotalPages","updateSearchQuery","val","setQuickFilter","filterSize","paginationSetPageSize","Number","a","axios","get","then","response","console","log","this","sm","col-sm-6","tag","length","size","right","onClick","placeholder","onChange","e","target","value","Ripple","color","exportDataAsCsv","Consumer","context","gridOptions","rowSelection","colResizeDefault","animateRows","floatingFilter","pagination","pivotPanelShow","enableRtl","direction","React","Component"],"mappings":"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","file":"static/js/147.b64aa8e1.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Input,\r\n  Row,\r\n  Col,\r\n  UncontrolledDropdown,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  DropdownToggle,\r\n  Button,\r\n} from \"reactstrap\";\r\nimport moment from \"moment\";\r\nimport { ContextLayout } from \"../../../utility/context/Layout\";\r\nimport { AgGridReact } from \"ag-grid-react\";\r\nimport { Edit, Trash2, ChevronDown, Eye } from \"react-feather\";\r\nimport { history } from \"../../../history\";\r\nimport \"../../../assets/scss/plugins/tables/_agGridStyleOverride.scss\";\r\nimport \"../../../assets/scss/pages/users.scss\";\r\nimport axios from \"axios\";\r\n\r\nclass AffilateProgramList extends React.Component {\r\n  state = {\r\n    rowData: [],\r\n    paginationPageSize: 20,\r\n    currenPageSize: \"\",\r\n    getPageSize: \"\",\r\n    defaultColDef: {\r\n      sortable: true,\r\n      editable: true,\r\n      resizable: true,\r\n      suppressMenu: true,\r\n    },\r\n    columnDefs: [\r\n      {\r\n        headerName: \"S.No\",\r\n        valueGetter: \"node.rowIndex + 1\",\r\n        field: \"node.rowIndex + 1\",\r\n        width: 100,\r\n        filter: true,\r\n        // checkboxSelection: true,\r\n        // headerCheckboxSelectionFilteredOnly: true,\r\n        // headerCheckboxSelection: true,\r\n      },\r\n\r\n      {\r\n        headerName: \"Refer from\",\r\n        field: \"refer_from_id.fullname\",\r\n        filter: true,\r\n        width: 150,\r\n        cellRendererFramework: params => {\r\n          return (\r\n            <div className=\" mr-2\">\r\n              <span>{params.data.refer_from_id?.fullname}</span>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n\r\n      {\r\n        headerName: \"Email\",\r\n        field: \"refer_from_id?.email\",\r\n        filter: true,\r\n        width: 150,\r\n        cellRendererFramework: params => {\r\n          return (\r\n            <div className=\" mr-2\">\r\n              <span>{params.data.refer_from_id?.email}</span>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n      {\r\n        headerName: \"Mobile No.\",\r\n        field: \"refer_from_id?.mobile\",\r\n        filter: true,\r\n        width: 150,\r\n        cellRendererFramework: params => {\r\n          return (\r\n            <div className=\" mr-2\">\r\n              <span>{params.data.refer_from_id?.mobile}</span>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n\r\n      {\r\n        headerName: \"Refer to\",\r\n        field: \"refer_to_id.fullname\",\r\n        filter: true,\r\n        width: 150,\r\n        cellRendererFramework: params => {\r\n          return (\r\n            <div className=\" mr-2\">\r\n              <span>{params.data.refer_to_id?.fullname}</span>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n\r\n      {\r\n        headerName: \"Email\",\r\n        field: \"refer_to_id?.email\",\r\n        filter: true,\r\n        width: 150,\r\n        cellRendererFramework: params => {\r\n          return (\r\n            <div className=\" mr-2\">\r\n              <span>{params.data.refer_to_id?.email}</span>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n      {\r\n        headerName: \"Mobile No.\",\r\n        field: \"refer_to_id?.mobile\",\r\n        filter: true,\r\n        width: 150,\r\n        cellRendererFramework: params => {\r\n          return (\r\n            <div className=\" mr-2\">\r\n              <span>{params.data.refer_to_id?.mobile}</span>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n      {\r\n        headerName: \"Refered Amount\",\r\n        field: \"refer_amount\",\r\n        filter: true,\r\n        width: 150,\r\n        cellRendererFramework: params => {\r\n          return (\r\n            <div className=\"ml-2 mr-2 align-items-center d-flex\">\r\n              <span>{params.data.refer_amount}</span>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n      {\r\n        headerName: \"Date\",\r\n        field: \"refer_amount\",\r\n        filter: true,\r\n        width: 200,\r\n        cellRendererFramework: params => {\r\n          return (\r\n            <div className=\"mr-2 align-items-center d-flex\">\r\n              <span>\r\n                {moment(params.data.createdAt).format(\r\n                  \"MMMM Do YYYY, h:mm:ss a\"\r\n                )}\r\n              </span>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n      //   {\r\n      //     headerName: \"Actions\",\r\n      //     field: \"transactions\",\r\n      //     width: 150,\r\n      //     cellRendererFramework: params => {\r\n      //       return (\r\n      //         <div className=\"actions cursor-pointer\">\r\n      //           <Button\r\n      //             color=\"primary\"\r\n      //             bsSize=\"small\"\r\n      //             className=\"buuton\"\r\n      //             onClick={() =>\r\n      //               axiosConfig\r\n      //                 .get(`/cnfrm_withdrawal/${params.data._id}`)\r\n      //                 .then(response => {\r\n      //                   console.log(response.data);\r\n      //                 })\r\n      //                 .catch(error => {\r\n      //                   console.log(error);\r\n      //                 })\r\n      //             }\r\n      //           >\r\n      //             Conform\r\n      //           </Button>\r\n      //         </div>\r\n      //       );\r\n      //     },\r\n      //   },\r\n      //   {\r\n      //     headerName: \"Actions\",\r\n      //     field: \"transactions\",\r\n      //     width: 100,\r\n      //     cellRendererFramework: params => {\r\n      //       return (\r\n      //         <div className=\"actions cursor-pointer\">\r\n      //           {/* <Edit\r\n      //             className=\"mr-50\"\r\n      //             size=\"20px\"\r\n      //             color=\"blue\"\r\n      //             onClick={() =>\r\n      //               history.push(`/app/course/editCourse/${params.data._id}`)\r\n      //             }\r\n      //           /> */}\r\n      //           {/* <Eye\r\n      //             className=\"mr-50\"\r\n      //             size=\"20px\"\r\n      //             color=\"blue\"\r\n      //             onClick={() =>\r\n      //               history.push(`/app/course/viewCourse/${params.data._id}`)\r\n      //             }\r\n      //           /> */}\r\n      //           <Trash2\r\n      //             size=\"20px\"\r\n      //             color=\"red\"\r\n      //             onClick={() => {\r\n      //               let selectedData = this.gridApi.getSelectedRows();\r\n      //               this.runthisfunction(params.data._id);\r\n      //               this.gridApi.updateRowData({ remove: selectedData });\r\n      //             }}\r\n      //           />\r\n      //         </div>\r\n      //       );\r\n      //     },\r\n      //   },\r\n    ],\r\n  };\r\n\r\n  async componentDidMount() {\r\n    await axios\r\n      .get(\"http://65.0.80.5:5000/api/user/allrefer_earn\")\r\n      .then(response => {\r\n        let rowData = response.data.data;\r\n        console.log(rowData);\r\n        this.setState({ rowData });\r\n      });\r\n  }\r\n\r\n  // async runthisfunction(id) {\r\n  //   console.log(id);\r\n  //   await axiosConfig.get(`/dltwithdrwal/${id}`).then(response => {\r\n  //     console.log(response);\r\n  //   });\r\n  // }\r\n  onGridReady = params => {\r\n    this.gridApi = params.api;\r\n    this.gridColumnApi = params.columnApi;\r\n    this.setState({\r\n      currenPageSize: this.gridApi.paginationGetCurrentPage() + 1,\r\n      getPageSize: this.gridApi.paginationGetPageSize(),\r\n      totalPages: this.gridApi.paginationGetTotalPages(),\r\n    });\r\n  };\r\n\r\n  updateSearchQuery = val => {\r\n    this.gridApi.setQuickFilter(val);\r\n  };\r\n\r\n  filterSize = val => {\r\n    if (this.gridApi) {\r\n      this.gridApi.paginationSetPageSize(Number(val));\r\n      this.setState({\r\n        currenPageSize: val,\r\n        getPageSize: val,\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { rowData, columnDefs, defaultColDef } = this.state;\r\n    return (\r\n      <Row className=\"app-user-list\">\r\n        <Col sm=\"12\"></Col>\r\n        <Col sm=\"12\">\r\n          <Card>\r\n            <Row className=\"m-2\">\r\n              <Col>\r\n                <h1 col-sm-6 className=\"float-left\">\r\n                  Affilate Program List\r\n                </h1>\r\n              </Col>\r\n            </Row>\r\n            <CardBody>\r\n              {this.state.rowData === null ? null : (\r\n                <div className=\"ag-theme-material w-100 my-2 ag-grid-table\">\r\n                  <div className=\"d-flex flex-wrap justify-content-between align-items-center\">\r\n                    <div className=\"mb-1\">\r\n                      <UncontrolledDropdown className=\"p-1 ag-dropdown\">\r\n                        <DropdownToggle tag=\"div\">\r\n                          {this.gridApi\r\n                            ? this.state.currenPageSize\r\n                            : \"\" * this.state.getPageSize -\r\n                              (this.state.getPageSize - 1)}{\" \"}\r\n                          -{\" \"}\r\n                          {this.state.rowData.length -\r\n                            this.state.currenPageSize * this.state.getPageSize >\r\n                          0\r\n                            ? this.state.currenPageSize * this.state.getPageSize\r\n                            : this.state.rowData.length}{\" \"}\r\n                          of {this.state.rowData.length}\r\n                          <ChevronDown className=\"ml-50\" size={15} />\r\n                        </DropdownToggle>\r\n                        <DropdownMenu right>\r\n                          <DropdownItem\r\n                            tag=\"div\"\r\n                            onClick={() => this.filterSize(20)}\r\n                          >\r\n                            20\r\n                          </DropdownItem>\r\n                          <DropdownItem\r\n                            tag=\"div\"\r\n                            onClick={() => this.filterSize(50)}\r\n                          >\r\n                            50\r\n                          </DropdownItem>\r\n                          <DropdownItem\r\n                            tag=\"div\"\r\n                            onClick={() => this.filterSize(100)}\r\n                          >\r\n                            100\r\n                          </DropdownItem>\r\n                          <DropdownItem\r\n                            tag=\"div\"\r\n                            onClick={() => this.filterSize(134)}\r\n                          >\r\n                            134\r\n                          </DropdownItem>\r\n                        </DropdownMenu>\r\n                      </UncontrolledDropdown>\r\n                    </div>\r\n                    <div className=\"d-flex flex-wrap justify-content-between mb-1\">\r\n                      <div className=\"table-input mr-1\">\r\n                        <Input\r\n                          placeholder=\"search...\"\r\n                          onChange={e => this.updateSearchQuery(e.target.value)}\r\n                          value={this.state.value}\r\n                        />\r\n                      </div>\r\n                      <div className=\"export-btn\">\r\n                        <Button.Ripple\r\n                          color=\"primary\"\r\n                          onClick={() => this.gridApi.exportDataAsCsv()}\r\n                        >\r\n                          Export as CSV\r\n                        </Button.Ripple>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <ContextLayout.Consumer>\r\n                    {context => (\r\n                      <AgGridReact\r\n                        gridOptions={{}}\r\n                        rowSelection=\"multiple\"\r\n                        defaultColDef={defaultColDef}\r\n                        columnDefs={columnDefs}\r\n                        rowData={rowData}\r\n                        onGridReady={this.onGridReady}\r\n                        colResizeDefault={\"shift\"}\r\n                        animateRows={true}\r\n                        floatingFilter={false}\r\n                        pagination={true}\r\n                        paginationPageSize={this.state.paginationPageSize}\r\n                        pivotPanelShow=\"always\"\r\n                        enableRtl={context.state.direction === \"rtl\"}\r\n                      />\r\n                    )}\r\n                  </ContextLayout.Consumer>\r\n                </div>\r\n              )}\r\n            </CardBody>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    );\r\n  }\r\n}\r\nexport default AffilateProgramList;\r\n"],"sourceRoot":""}